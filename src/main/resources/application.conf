akka {
  loglevel = "INFO"

  actor {
    provider = cluster

    allow-java-serialization = off

    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "domain.serializer.MsgSerializeMarker" = kryo
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp
      canonical {
        hostname = "localhost"
      }
    }
  }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}

akka-kryo-serialization {
  type = "graph" // can serialize objects with shared or cyclic dependencies: alternative nograph, faster
  id-strategy = "incremental" // one of the fastest; alternative "explicit"
  post-serialization-transformations = "lz4" // "lz4,aes" compression with lz4 and encryption aes

  use-manifests = true // attach the class name to the serialization
  implicit-registration-logging = true // see how the standard classes/types are being registered

  mappings { // optional for id-strategy "incremental", mandatory for "explicit"
  }

  classes = [
  ]
}
